%% -*- erlang -*-
[{erleans, [{grain_provider, [{test_grain, postgres}]},

            {stream_providers, [{vonnegut,
                                 [{module, erleans_vonnegut_provider},
                                  {args, []}]}]},

            {providers, [{ets, [{module, ets_provider},
                                {args, []}]},
                         {postgres, [{module, erleans_pgsql_blob_provider},
                                     {args, [{size, 5},
                                             {host, "0.0.0.0"},
                                             {port, 5432},
                                             {database, "test"},
                                             {user, "test"},
                                             {password, ""}]}]}]},

            {default_provider, postgres},
            {default_stream_provider, vonnegut},

            {db_testing, true},

            {num_partitions, 64}]},

 {vonnegut, [{chain, [{name, chain1},
                      {discovery, local},
                      {port, 5555}]},
             {client, [{endpoints, [{"127.0.0.1", 5555}]}]}]},

 {lasp, [{membership, true},
         {storage_backend, lasp_ets_storage_backend},
         {mode, delta_based},
         {delta_interval, 200}]},

 {plumtree, [{broadcast_exchange_timer, 60000},
             {broadcast_mods, [lasp_plumtree_backend]}]},

 {partisan, [{partisan_peer_service_manager,
              partisan_default_peer_service_manager}]},

 {lager, [{handlers,
           [{lager_console_backend, [{level, debug}, {formatter, lager_default_formatter},
                                     {formatter_config, [date, " ", time, " ", color, "[", severity, "] ",
                                                         {pid, ["pid=", pid], ""},
                                                         {module, [
                                                                   " module=", module, " ",
                                                                   {function, ["function=", function, " "], ""},
                                                                   {line, ["line=",line], ""}], ""},
                                                         " ", message, "\n"]}]}]}]},

 {prometheus, [{default_metrics,
                [{gauge, [{name, providers_in_use},
                          {labels, [provider]},
                          {help, "number of providers checked out from the pool"},
                          {registry, default}]},
                 {gauge, [{name, providers_available},
                          {labels, [provider]},
                          {help, "number of providers checked in to the pool"},
                          {registry, default}]},
                 {gauge, [{name, providers_pool_size},
                          {labels, [provider]},
                          {help, "total number of used and unused providers"},
                          {registry, default}]},
                 {summary, [{name, providers_sojourn_microseconds},
                            {labels, [provider]},
                            {help, "time a provider spent in the broker"},
                            {registry, default}]},
                 {summary, [{name, providers_query_duration_microseconds},
                            {labels, [provider, type]},
                            {help, "duration of a provider query"},
                            {registry, default}]},

                 {histogram, [{name, service_call},
                              {labels, [module, function]},
                              {buckets, [100, 300, 500, 750, 1000]},
                              {duration_unit, milliseconds},
                              {help, "service call execution time"},
                              {registry, default}]},

                 {gauge, [{name, active_topics},
                          {labels, []},
                          {help, "number of active topic processes"},
                          {registry, default}]},
                 {gauge, [{name, log_segments},
                          {labels, [topic]},
                          {help, "number of log segments for topics"},
                          {registry, default}]},
                 {gauge, [{name, open_connections},
                          {labels, []},
                          {help, "number of open connections through the client"},
                          {registry, default}]},
                 {gauge, [{name, replicas},
                          {labels, []},
                          {help, "number of replicas in this chain"},
                          {registry, default}]},
                 {gauge, [{name, chains},
                          {labels, []},
                          {help, "number of chains in the cluster"},
                          {registry, default}]},

                 %% same as active_topics right now
                 %% {gauge, [{name, topics},
                 %%          {labels, [chain]},
                 %%          {help, "number of topics in a chain"},
                 %%          {registry, default}]},

                 {boolean, [{name, is_active},
                            {labels, []},
                            {help, "is this brick active in the chain"},
                            {registry, default}]},
                 {boolean, [{name, is_solo},
                            {labels, []},
                            {help, "is this chain a single node"},
                            {registry, default}]},
                 {boolean, [{name, is_head},
                            {labels, []},
                            {help, "is this brick the head of a chain"},
                            {registry, default}]},
                 {boolean, [{name, is_middle},
                            {labels, []},
                            {help, "is this brick in the middle of a chain"},
                            {registry, default}]},
                 {boolean, [{name, is_tail},
                            {labels, []},
                            {help, "is this brick the tail of a chain"},
                            {registry, default}]},

                 {counter, [{name, client_requests},
                            {labels, []},
                            {help, "requests cogunt"},
                            {registry, default}]}
                ]}]}
].
